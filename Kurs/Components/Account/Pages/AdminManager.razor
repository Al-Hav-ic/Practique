


@page "/admin/dashboard"

@using Kurs.Classes
@using Microsoft.AspNetCore.Identity
@using Kurs.Data
@using Kurs.Components
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager
@inject IEventData EventData
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
<link href="AdminDashboard.css" rel="stylesheet" />

@rendermode InteractiveServer
<PageTitle>Сторінка Адміністратора</PageTitle>

<AuthorizeView>
    <Authorized>
        <h4>Привіт @userName , Твоя Роль: @userRole</h4>
        
        @* <button class="admin-button" @onclick="NavigateToDashboard">Dashboard</button> *@
        <button class="admin-button" @onclick="NavigateToEvents">До Подій</button>
        <button class="admin-button" @onclick="NavigateToUsers">До Користувачів</button>
        <button class="admin-button" @onclick="NavigateToSettings">До повідомлень</button>
    </Authorized>
    <NotAuthorized>
        <p>Ви не Авторизовані , просимо перейти за посиланням</p>
        <NavLink href="/Account/Login" class="btn btn-primary">До Авторизації</NavLink>
    </NotAuthorized>
</AuthorizeView>

@code {
    private IEnumerable<Event> allEvents = new List<Event>();
    private string userName;
    private string userRole;

    protected override async Task OnInitializedAsync()
    {
        // Завантажуємо всі події
        allEvents = await EventData.GetAllEventsAsync();
        // Отримуємо інформацію про поточного користувача
        await GetUserDetails();
    }

    private async Task GetUserDetails()
    {
        // Отримуємо поточний стан автентифікації
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var appUser = await UserManager.GetUserAsync(user);
            userName = appUser.UserName;
            var roles = await UserManager.GetRolesAsync(appUser);
            userRole = roles.FirstOrDefault();  // Отримуємо першу роль (якщо є)
        }
        // else if (userRole != "Admin")
        // {
        //     NavigationManager.NavigateTo("/");
        // }
    }

    private void NavigateToDashboard()
    {
        NavigationManager.NavigateTo("/admin/dashboard");
    }

    private void NavigateToEvents()
    {
        NavigationManager.NavigateTo("/admin/events");
    }

    private void NavigateToUsers()
    {
        NavigationManager.NavigateTo("/admin/users");
    }

    private void NavigateToSettings()
    {
        NavigationManager.NavigateTo("/messages/list");
    }
    private void NavigateToEventDetails(int eventId)
    {
        NavigationManager.NavigateTo($"/event/details/{eventId}"); // Navigate to the event details page
    }

}
