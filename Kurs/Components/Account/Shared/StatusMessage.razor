@* @if (!string.IsNullOrEmpty(DisplayMessage))
{
    var statusMessageClass = DisplayMessage.StartsWith("Error") ? "danger" : "success";
    <div class="alert alert-@statusMessageClass" role="alert">
        @DisplayMessage
    </div>
}

@code {
    private string? messageFromCookie;

    [Parameter]
    public string? Message { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private string? DisplayMessage => Message ?? messageFromCookie;

    protected override void OnInitialized()
    {
        messageFromCookie = HttpContext.Request.Cookies[IdentityRedirectManager.StatusCookieName];

        if (messageFromCookie is not null)
        {
            HttpContext.Response.Cookies.Delete(IdentityRedirectManager.StatusCookieName);
        }
    }
}
 *@
@* @if (!string.IsNullOrEmpty(DisplayMessage))
{
    var statusMessageClass = DisplayMessage.StartsWith("Error") ? "danger" : "success";
    <div class="alert alert-@statusMessageClass" role="alert">
        @DisplayMessage
    </div>
}

@code {
    private string? messageFromCookie;

    [Parameter]
    public string? Message { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private string? DisplayMessage => Message ?? messageFromCookie;

    protected override void OnInitialized()
    {
        if (HttpContext != null && HttpContext.Request != null && HttpContext.Request.Cookies != null)
        {
            messageFromCookie = HttpContext.Request.Cookies[IdentityRedirectManager.StatusCookieName];

            if (messageFromCookie != null && HttpContext.Response != null && HttpContext.Response.Cookies != null)
            {
                HttpContext.Response.Cookies.Delete(IdentityRedirectManager.StatusCookieName);
            }
        }
    }
}
 *@
@page "/status-message"
@inject IHttpContextAccessor HttpContextAccessor

@if (!string.IsNullOrEmpty(DisplayMessage))
{
    var statusMessageClass = DisplayMessage.StartsWith("Error") ? "danger" : "success";
    <div class="alert alert-@statusMessageClass" role="alert">
        @DisplayMessage
    </div>
}

@code {
    private string? messageFromCookie;

    [Parameter]
    public string? Message { get; set; }

    private string? DisplayMessage => Message ?? messageFromCookie;

    protected override async Task OnInitializedAsync()
    {
        var httpContext = HttpContextAccessor.HttpContext;

        if (httpContext != null)
        {
            if (httpContext.Request.Cookies.TryGetValue(IdentityRedirectManager.StatusCookieName, out var cookieValue))
            {
                messageFromCookie = cookieValue;
                // Видаляємо кукі лише якщо відповідь ще не відправлена
                if (!httpContext.Response.HasStarted)
                {
                    httpContext.Response.Cookies.Delete(IdentityRedirectManager.StatusCookieName);
                }
            }
        }
        else
        {
            // Обробка випадку, коли HttpContext є null
            // Наприклад, можна записати лог або вивести повідомлення про помилку
        }
    }
}
